{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "63589ac5-94d4-4477-92b9-8512e57af8a6",
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "from flask import Flask, render_template, request, redirect, url_for\n",
    "from sklearn.linear_model import ElasticNet\n",
    "import webbrowser\n",
    "from flask_wtf import FlaskForm\n",
    "from wtforms import SelectField, SubmitField\n",
    "from sklearn.preprocessing import LabelEncoder\n",
    "\n",
    "# לשקול להוריד את התיאור ואת הרחוב.\n",
    "app = Flask(\"ToPredict\")\n",
    "app.config['SECRET_KEY'] = 'my_secret_key_123'\n",
    "\n",
    "@app.route('/')\n",
    "def start():\n",
    "    return 'Hello! welcome to the house prediction!'\n",
    "\n",
    "model = ElasticNet() \n",
    "\n",
    "def load_model():\n",
    "    global model\n",
    "    # Load your model from the pkl file\n",
    "    model = ElasticNet()\n",
    "\n",
    "class HouseForm(FlaskForm):\n",
    "    number_in_street = SelectField('מספר ברחוב:')\n",
    "    room_number = SelectField('מספר חדרים:')\n",
    "    Area = SelectField('שטח:')\n",
    "    num_of_images = SelectField('מספר תמונות:')\n",
    "    hasElevator = SelectField('מעלית:', choices=[('1', 'כן'), ('0', 'לא')])\n",
    "    hasParking = SelectField('חניה:', choices=[('1', 'כן'), ('0', 'לא')])\n",
    "    hasBars = SelectField('סורגים:', choices=[('1', 'כן'), ('0', 'לא')])\n",
    "    hasStorage = SelectField('מחסן:', choices=[('1', 'כן'), ('0', 'לא')])\n",
    "    hasAirCondition = SelectField('מזגן:', choices=[('1', 'כן'), ('0', 'לא')])\n",
    "    hasBalcony = SelectField('מרפסת:', choices=[('1', 'כן'), ('0', 'לא')])\n",
    "    hasMamad = SelectField('ממ\"ד:', choices=[('1', 'כן'), ('0', 'לא')])\n",
    "    handicapFriendly = SelectField('גישה לנכים:', choices=[('1', 'כן'), ('0', 'לא')])\n",
    "    publishedDays = SelectField('ימי פרסום:')\n",
    "    floor = SelectField('קומה:')\n",
    "    total_floors = SelectField('סה\"כ קומות:')\n",
    "    type = SelectField('סוג הנכס:', choices=[\n",
    "        ('בית פרטי', 'בית פרטי'),\n",
    "        ('דירה', 'דירה'),\n",
    "        ('דירת גן', 'דירת גן'),\n",
    "        ('פנטהאוז', 'פנטהאוז'),\n",
    "        ('דופלקס', 'דופלקס'),\n",
    "        ('דו משפחתי', 'דו משפחתי'),\n",
    "        ('דירת גג', 'דירת גג'),\n",
    "        ('אחר', 'אחר'),\n",
    "        ('קוטג', 'קוטג'),\n",
    "        ('בניין', 'בניין'),\n",
    "        ('טריפלקס', 'טריפלקס'),\n",
    "        ('מיני פנטהאוז', 'מיני פנטהאוז'),\n",
    "        ('מגרש', 'מגרש'),\n",
    "        ('דירת נופש', 'דירת נופש'),\n",
    "        ('קוטג טורי', 'קוטג טורי'),\n",
    "        ('נחלה', 'נחלה')\n",
    "    ])\n",
    "    city_area = SelectField('אזור העיר:')\n",
    "    condition = SelectField('מצב הנכס:')\n",
    "    entrance_date = SelectField('תאריך כניסה:', choices=[\n",
    "        ('less_than_6 months', 'פחות מ-6 חודשים'),\n",
    "        ('months_6_12', '6-12 חודשים'),\n",
    "        ('above_year', 'יותר משנה'),\n",
    "        ('flexible', 'גמיש'),\n",
    "        ('not_defined', 'לא מוגדר')\n",
    "    ])\n",
    "    City = SelectField('עיר:')\n",
    "    Street = SelectField('רחוב:')\n",
    "    furniture = SelectField('ריהוט:', choices=[('1', 'כן'), ('0', 'לא')])\n",
    "    description = SelectField('תיאור:')\n",
    "\n",
    "@app.route('/', methods=['GET', 'POST'])\n",
    "def dashboard():\n",
    "    form = HouseForm()\n",
    "    if form.validate_on_submit():\n",
    "        return redirect(url_for('predict'))\n",
    "    return render_template('C:\\\\Windows\\\\System32\\\\flaskHelloWorld\\\\templates\\\\prediction.html', form=form, encoding='utf-8')\n",
    "\n",
    "@app.route('/predict', methods=['POST'])\n",
    "def predict():\n",
    "    load_model()\n",
    "    if model is None:\n",
    "        model\n",
    "    # קבלת הנתונים מהטופס והפעלת המודל\n",
    "    features = [\n",
    "        request.form.get('number_in_street'),\n",
    "        request.form.get('room_number'),\n",
    "        request.form.get('Area'),\n",
    "        request.form.get('num_of_images'),\n",
    "        request.form.get('hasElevator'),\n",
    "        request.form.get('hasParking'),\n",
    "        request.form.get('hasBars'),\n",
    "        request.form.get('hasStorage'),\n",
    "        request.form.get('hasAirCondition'),\n",
    "        request.form.get('hasBalcony'),\n",
    "        request.form.get('hasMamad'),\n",
    "        request.form.get('handicapFriendly'),\n",
    "        request.form.get('publishedDays'),\n",
    "        request.form.get('floor'),\n",
    "        request.form.get('total_floors'),\n",
    "        request.form.get('type'),\n",
    "        request.form.get('city_area'),\n",
    "        request.form.get('condition'),\n",
    "        request.form.get('entrance_date'),\n",
    "        request.form.get('City'),\n",
    "        request.form.get('Street'),\n",
    "        request.form.get('furniture'),\n",
    "        request.form.get('description')\n",
    "    ]\n",
    "    predicted_price = model.predict(features)\n",
    "    return render_template('C:\\\\Windows\\\\System32\\\\flaskHelloWorld\\\\templates\\\\prediction.html', price=predicted_price)\n",
    "\n",
    "if __name__ == '__main__':\n",
    "    app.run(host='0.0.0.0', port=81)\n",
    "    webbrowser.open('http://localhost')\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2097ee12-9b25-4903-b473-147ddf5235b9",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
